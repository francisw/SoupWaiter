{% extends 'admin/vacation-soup.twig' %}
{% block content %}
{% embed 'admin/form.twig' %}
{% block form_name %}connect{% endblock form_name %}
{% block form_content %}
<script>
    jQuery(function() {
        window.doAllServiceChecks = function(){
            jQuery(".servicecheck").each(function () {

                jQuery(this).addClass("checking").removeClass("ok nok fail")
                    .find('I')
                    .removeClass('fa-check fa-chain-broken fa-question');
                var ServiceAjaxCall = {
                    type: "post",
                    dataType: "json",
                    context: this,
                    url: ajaxurl,
                    data: {
                        action: "servicecheck",
                        _vs_nonce: jQuery('INPUT[name="_vs_nonce"]').val(),
                        service: jQuery(this).data('service')
                    }
                };
                jQuery.ajax(ServiceAjaxCall)
                    .fail(function (jqXHR, status, error) {
                        if (unloading) return;
                        console.log('fail (vacation-soup) ' + status + ' ' + error);
                        jQuery(this).addClass('nok')
                            .find('I')
                            .removeClass('fa-question')
                            .addClass('fa-chain-broken');
                    })
                    .done(function (response) {
                        if (unloading) return;
                        var status,title;
                        if (response.success){
                            status = response.status;
                            title = response.message;
                        } else {
                            status = 'nok fail';
                            title = (response.error)?response.error.message:'Error connecting';
                        }
                        faIcon = (status==='ok')?'fa-check':'fa-chain-broken';
                        jQuery(this).addClass(status)
                            .find('I')
                            .removeClass('fa-question')
                            .addClass(faIcon)
                            .parent().prop('title',title);
                    })
                    .always(function(){
                        if (unloading) return;
                        jQuery(this).removeClass("checking");
                    });
            });
        }
        jQuery('.soup-icon').click(doAllServiceChecks);
        doAllServiceChecks();

        window.soup_progress = function(){
            var ajaxCall = {
                type: "get",
                url: ajaxurl,
                data: {
                    'action': 'soup_resynch_progress',
                    _vs_nonce: jQuery('INPUT[name="_vs_nonce"]').val()
                }
            };
            jQuery.ajax(ajaxCall)
                .done(function($response){
                    if ($response.progress) {
                        var $=jQuery('BUTTON.resynch');
                        if ('Re-Synch'===$.html()) {
                            return;
                        } else {
                            $.html(''+$response.progress+'%');
                        }
                    }
                    setTimeout(soup_progress,1000);
                });
        }

        jQuery('BUTTON.resynch').click(function (){
            this.disabled=true;
            jQuery('BUTTON.resynch').html('0%');
            var ajaxCall = {
                type: "post",
                context: this,
                url: ajaxurl,
                data: {
                    'action': 'soup_resynch',
                    _vs_nonce: jQuery('INPUT[name="_vs_nonce"]').val()
                }
            };
            jQuery.ajax(ajaxCall)
                .fail(function(jqXHR,status,error) {
                    console.log('fail (vacation-soup) '+status+' '+error);
                })
                .always(function(response) {
                    this.disabled=false;
                    jQuery('BUTTON.resynch').html('Re-Synch');
                });
            setTimeout(soup_progress,0);
            return false;
        });
    });
    </script>

<div class="vs-content tab-connect row">
    <div class="col-lg-6 col-md-6 col-xs-12 center-xs">
        <div id="connect-params" class="vs-panel row field-container">
            <div id="title" class="col-sm-12">
                <h1>The Soup Settings</h1>
                <p>Please enter the username (email) and password you <a href="https://learn.vacationsoup.com/register" target="_blank">registered with Vacation Soup</a>. Once set, you cannot change your username. </p>
                <div class="field">
                    <label for="kitchen_user">
                        Username <span class="required">*</span>
                    </label>
                    <input type="text" class="persist" name="SoupWaiter.kitchen_user" id="kitchen_user" autocomplete="off" value="{{ soup.kitchen_user }}"/>
                </div>
                <div class="field required">
                    <label for="kitchen_password">
                        Password <span class="required">*</span>
                    </label>
                    <input type="password" class="persist" name="SoupWaiter.kitchen_password" id="kitchen_password" {{ (soup.connected)?'placeholder="************"' }} autocomplete="off" value=""
                    data-persist-action="doAllServiceChecks()"/>
                </div>
                <div class="label-indent">
                </div>
                <p>You should not change these values unless advised to do so by a member of the Vacation Soup team.</p>
                <div class="field">
                    <label for="kitchen_host">
                        Kitchen
                    </label>
                    <input type="text" class="persist" name="SoupWaiter.kitchen_host" id="kitchen_host" value="{{ soup.kitchen_host }}"/>
                    <button class="resynch">Re-Synch</button>
                </div>
                <div class="field">
                    <label for="kitchen_auth_api">
                        Auth API
                    </label>
                    <input type="text" class="persist" name="SoupWaiter.kitchen_jwt_api" id="kitchen_auth_api" value="{{ soup.kitchen_jwt_api }}"/>
                </div>
                <div class="field">
                    <label for="kitchen_api">
                        Kitchen API
                    </label>
                    <input type="text" class="persist" name="SoupWaiter.kitchen_api" id="kitchen_api" value="{{ soup.kitchen_api }}"/>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-md-6 col-xs-12 center-xs">
        <div class="vs-panel row">
            <div id="title" class="col-sm-12">
                <h1>Vacation Soup Status</h1>
            </div>
            <div class="soup-icon hover col-sm-4 col-xs-12">
                <img title="Connect" src="{{ soup.image_url }}/vacation_soup_FB_logo_180sq.png"/>
            </div>

            <div id="servicecheck" class="soup-status col-sm-8">
                {% for handle,service in admin.services['basic'] %}
                    <div class="servicecheck" data-service="{{ handle }}">
                        {{ service['url']? "<a href='"~service['url']~"'>":"" }}
                        <i class="fa fa-question"></i><span>{{ service['title'] }}</span>
                        {{ service['url']? "</a>":"" }}
                    </div>
                {% endfor %}
                <h2>Premium services</h2>
                {% for handle,service in admin.services['premium'] %}
                    <div class="servicecheck" data-service="{{ handle }}">
                        {{ service['url']? "<a href='"~service['url']~"'>":"" }}
                        <i class="fa fa-question"></i><span>{{ service['title'] }}</span>
                        {{ service['url']? "</a>":"" }}
                    </div>
                {% endfor %}
            </div>
        </div>
    </div>
</div>
{% endblock form_content -%}{% endembed %}
{% endblock content %}
